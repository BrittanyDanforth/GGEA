╔═══════════════════════════════════════════════════════════════════════════╗
║                    SANRIO SHOP SYSTEM v3.0.0                              ║
║                        QUICK REFERENCE CARD                               ║
╚═══════════════════════════════════════════════════════════════════════════╝

┌───────────────────────────────────────────────────────────────────────────┐
│ 📁 FILE LOCATIONS (Roblox Studio)                                        │
├───────────────────────────────────────────────────────────────────────────┤
│                                                                           │
│  StarterPlayer > StarterPlayerScripts > ShopSystem                       │
│     ├─ SanrioShop              [LocalScript]                             │
│     ├─ SanrioShop_Core         [ModuleScript]                            │
│     └─ SanrioShop_UI           [ModuleScript]                            │
│                                                                           │
│  ReplicatedStorage > TycoonRemotes                                       │
│     ├─ GrantProductCurrency    [RemoteEvent]                             │
│     ├─ GamepassPurchased       [RemoteEvent]                             │
│     ├─ AutoCollectToggle       [RemoteEvent]                             │
│     └─ GetAutoCollectState     [RemoteFunction]                          │
│                                                                           │
└───────────────────────────────────────────────────────────────────────────┘

┌───────────────────────────────────────────────────────────────────────────┐
│ ⌨️  PLAYER CONTROLS                                                       │
├───────────────────────────────────────────────────────────────────────────┤
│  M Key          → Toggle shop open/close                                 │
│  ESC Key        → Close shop                                             │
│  X Button       → Toggle shop (gamepad)                                  │
│  Click Button   → Click shop button (bottom-right)                       │
└───────────────────────────────────────────────────────────────────────────┘

┌───────────────────────────────────────────────────────────────────────────┐
│ 🎨 COMMON CUSTOMIZATIONS                                                  │
├───────────────────────────────────────────────────────────────────────────┤
│                                                                           │
│ ╔═══════════════════╦═════════════════════════╦═══════════════════════╗ │
│ ║ What to Change    ║ File                    ║ Search For            ║ │
│ ╠═══════════════════╬═════════════════════════╬═══════════════════════╣ │
│ ║ Product IDs       ║ SanrioShop_Core.lua     ║ DataManager.products  ║ │
│ ║ Theme Colors      ║ SanrioShop_UI.lua       ║ UI.Theme.themes       ║ │
│ ║ Sound IDs         ║ SanrioShop_Core.lua     ║ SoundSystem.init      ║ │
│ ║ Keybind           ║ SanrioShop.lua          ║ Enum.KeyCode.M        ║ │
│ ║ Panel Size        ║ SanrioShop_Core.lua     ║ CONSTANTS.PANEL       ║ │
│ ║ Card Size         ║ SanrioShop_Core.lua     ║ CONSTANTS.CARD        ║ │
│ ║ Animation Speed   ║ SanrioShop_Core.lua     ║ CONSTANTS.ANIM        ║ │
│ ║ Tab Names         ║ SanrioShop.lua          ║ createTabBar          ║ │
│ ╚═══════════════════╩═════════════════════════╩═══════════════════════╝ │
│                                                                           │
└───────────────────────────────────────────────────────────────────────────┘

┌───────────────────────────────────────────────────────────────────────────┐
│ 🔧 MODULE STRUCTURE                                                        │
├───────────────────────────────────────────────────────────────────────────┤
│                                                                           │
│  SanrioShop_Core.lua exports:                                            │
│    • CONSTANTS      - Config values (sizes, timings, etc)                │
│    • State          - Shop state (isOpen, currentTab, etc)               │
│    • Events         - Event pub/sub system                               │
│    • Cache          - Caching system                                     │
│    • Utils          - Utilities (formatNumber, isMobile, etc)            │
│    • Animation      - Animation helpers (tween, spring)                  │
│    • SoundSystem    - Sound management                                   │
│    • DataManager    - Product data & Marketplace API                     │
│                                                                           │
│  SanrioShop_UI.lua exports:                                              │
│    • Theme          - Color theme system                                 │
│    • Components     - UI components (Frame, Button, etc)                 │
│    • Effects        - Visual effects (shadow, glow, shimmer)             │
│    • Layout         - Layout utilities (stack, grid, center)             │
│    • Responsive     - Responsive design helpers                          │
│                                                                           │
└───────────────────────────────────────────────────────────────────────────┘

┌───────────────────────────────────────────────────────────────────────────┐
│ 📊 LINE NUMBER QUICK REFERENCE                                            │
├───────────────────────────────────────────────────────────────────────────┤
│                                                                           │
│  SanrioShop_Core.lua (~600 lines)                                        │
│    Line  30: CONSTANTS - UI sizing, timing, cache durations              │
│    Line  70: State - Shop state management                               │
│    Line  90: Events - Event system                                       │
│    Line 110: Cache - Caching utilities                                   │
│    Line 150: Utils - Helper functions                                    │
│    Line 250: Animation - Tween system                                    │
│    Line 300: SoundSystem - Sound management                              │
│    Line 350: DataManager - Product data ★ EDIT PRODUCT IDS HERE         │
│                                                                           │
│  SanrioShop_UI.lua (~650 lines)                                          │
│    Line  20: Theme - Color definitions ★ EDIT COLORS HERE                │
│    Line  80: Component base class                                        │
│    Line 120: Frame component                                             │
│    Line 180: Button component                                            │
│    Line 250: ScrollingFrame component                                    │
│    Line 350: Effects - Shadow, glow, shimmer                             │
│    Line 450: Layout - Stack, grid utilities                              │
│    Line 550: Responsive - Scaling & breakpoints                          │
│                                                                           │
│  SanrioShop.lua (~1100 lines)                                            │
│    Line  50: Shop class definition                                       │
│    Line 100: Toggle button creation                                      │
│    Line 200: Main interface creation                                     │
│    Line 300: Header creation                                             │
│    Line 400: Tab bar creation                                            │
│    Line 500: Page creation                                               │
│    Line 600: Product card rendering                                      │
│    Line 900: Purchase handling                                           │
│    Line1000: Input handlers ★ EDIT KEYBIND HERE                          │
│    Line1050: Marketplace event handlers                                  │
│                                                                           │
└───────────────────────────────────────────────────────────────────────────┘

┌───────────────────────────────────────────────────────────────────────────┐
│ 🎯 IMPORTANT CONSTANTS                                                     │
├───────────────────────────────────────────────────────────────────────────┤
│                                                                           │
│  UI Sizing:                                                               │
│    PANEL_SIZE         = Vector2.new(1140, 860)    # Desktop panel        │
│    PANEL_SIZE_MOBILE  = Vector2.new(920, 720)     # Mobile panel         │
│    CARD_SIZE          = Vector2.new(520, 300)     # Desktop card         │
│    CARD_SIZE_MOBILE   = Vector2.new(480, 280)     # Mobile card          │
│                                                                           │
│  Animation Timings (seconds):                                             │
│    ANIM_FAST    = 0.15    # Quick transitions                            │
│    ANIM_MEDIUM  = 0.25    # Standard animations                          │
│    ANIM_SLOW    = 0.35    # Slow, emphasis animations                    │
│    ANIM_BOUNCE  = 0.30    # Spring/bounce effects                        │
│    ANIM_SMOOTH  = 0.40    # Smooth, flowing animations                   │
│                                                                           │
│  Cache Durations (seconds):                                               │
│    CACHE_PRODUCT_INFO = 300    # 5 minutes                               │
│    CACHE_OWNERSHIP    = 60     # 1 minute                                │
│                                                                           │
│  Timeouts:                                                                │
│    PURCHASE_TIMEOUT = 15    # Purchase prompt timeout                    │
│    RETRY_DELAY      = 2     # Delay between retries                      │
│    MAX_RETRIES      = 3     # Maximum retry attempts                     │
│                                                                           │
└───────────────────────────────────────────────────────────────────────────┘

┌───────────────────────────────────────────────────────────────────────────┐
│ 🎨 DEFAULT THEME COLORS                                                    │
├───────────────────────────────────────────────────────────────────────────┤
│                                                                           │
│  Neutrals:                                                                │
│    background     = RGB(253, 252, 250)  # Off-white background           │
│    surface        = RGB(255, 255, 255)  # Pure white                     │
│    surfaceAlt     = RGB(246, 248, 252)  # Light gray                     │
│    stroke         = RGB(222, 226, 235)  # Border color                   │
│    text           = RGB(35, 38, 46)     # Dark text                      │
│    textSecondary  = RGB(120, 126, 140)  # Gray text                      │
│                                                                           │
│  Brand:                                                                   │
│    accent         = RGB(255, 64, 129)   # Pink accent                    │
│    accentAlt      = RGB(186, 214, 255)  # Blue accent                    │
│                                                                           │
│  Status:                                                                  │
│    success        = RGB(76, 175, 80)    # Green                          │
│    warning        = RGB(255, 152, 0)    # Orange                         │
│    error          = RGB(244, 67, 54)    # Red                            │
│                                                                           │
│  Characters:                                                              │
│    kitty          = RGB(255, 64, 64)    # Hello Kitty red                │
│    melody         = RGB(255, 187, 204)  # My Melody pink                 │
│    kuromi         = RGB(200, 190, 255)  # Kuromi purple                  │
│    cinna          = RGB(186, 214, 255)  # Cinnamoroll blue               │
│    pompom         = RGB(255, 220, 110)  # Pompompurin yellow             │
│                                                                           │
└───────────────────────────────────────────────────────────────────────────┘

┌───────────────────────────────────────────────────────────────────────────┐
│ 🔊 DEFAULT SOUND IDs                                                       │
├───────────────────────────────────────────────────────────────────────────┤
│                                                                           │
│  click        = rbxassetid://876939830      (Volume: 0.4)                │
│  hover        = rbxassetid://10066936758    (Volume: 0.2)                │
│  open         = rbxassetid://452267918      (Volume: 0.5)                │
│  close        = rbxassetid://452267918      (Volume: 0.5)                │
│  success      = rbxassetid://876939830      (Volume: 0.6)                │
│  error        = rbxassetid://876939830      (Volume: 0.5)                │
│  notification = rbxassetid://876939830      (Volume: 0.5)                │
│                                                                           │
└───────────────────────────────────────────────────────────────────────────┘

┌───────────────────────────────────────────────────────────────────────────┐
│ 📡 REMOTE EVENTS API                                                       │
├───────────────────────────────────────────────────────────────────────────┤
│                                                                           │
│  GrantProductCurrency (RemoteEvent)                                      │
│    Direction: Client → Server                                            │
│    Fire from: Client after product purchase                              │
│    Parameters: productId (number)                                        │
│    Purpose: Request currency grant after dev product purchase            │
│                                                                           │
│  GamepassPurchased (RemoteEvent)                                         │
│    Direction: Server → Client                                            │
│    Fire from: Server after gamepass purchase confirmed                   │
│    Parameters: passId (number)                                           │
│    Purpose: Notify client to refresh UI                                  │
│                                                                           │
│  AutoCollectToggle (RemoteEvent)                                         │
│    Direction: Client → Server                                            │
│    Fire from: Client when toggle switch clicked                          │
│    Parameters: state (boolean)                                           │
│    Purpose: Enable/disable Auto Collect gamepass                         │
│                                                                           │
│  GetAutoCollectState (RemoteFunction)                                    │
│    Direction: Client ↔ Server                                            │
│    Invoke from: Client on shop open                                      │
│    Returns: state (boolean)                                              │
│    Purpose: Get current Auto Collect toggle state                        │
│                                                                           │
└───────────────────────────────────────────────────────────────────────────┘

┌───────────────────────────────────────────────────────────────────────────┐
│ ⚡ CORE EVENTS                                                             │
├───────────────────────────────────────────────────────────────────────────┤
│                                                                           │
│  Listen to events:                                                        │
│    Core.Events:on("shopOpened", callback)                                │
│    Core.Events:on("shopClosed", callback)                                │
│    Core.Events:on("tabChanged", callback)                                │
│    Core.Events:on("productsRefreshed", callback)                         │
│    Core.Events:on("error", callback)  -- When DEBUG = true               │
│    Core.Events:on("themeChanged", callback)                              │
│                                                                           │
│  Emit events:                                                             │
│    Core.Events:emit("eventName", ...args)                                │
│                                                                           │
└───────────────────────────────────────────────────────────────────────────┘

┌───────────────────────────────────────────────────────────────────────────┐
│ 🛠️  USEFUL UTILITIES                                                      │
├───────────────────────────────────────────────────────────────────────────┤
│                                                                           │
│  Core.Utils.isMobile()                                                   │
│    → Returns true if on mobile device                                    │
│                                                                           │
│  Core.Utils.formatNumber(1000000)                                        │
│    → Returns "1,000,000"                                                 │
│                                                                           │
│  Core.Utils.clamp(value, min, max)                                       │
│    → Constrains value between min and max                                │
│                                                                           │
│  Core.Utils.blend(color1, color2, alpha)                                 │
│    → Interpolates between two colors                                     │
│                                                                           │
│  Core.Animation.tween(object, properties, duration)                      │
│    → Animates object properties                                          │
│                                                                           │
│  Core.SoundSystem.play("click")                                          │
│    → Plays named sound effect                                            │
│                                                                           │
└───────────────────────────────────────────────────────────────────────────┘

┌───────────────────────────────────────────────────────────────────────────┐
│ 🐛 DEBUG MODE                                                              │
├───────────────────────────────────────────────────────────────────────────┤
│                                                                           │
│  Enable in SanrioShop_Core.lua:                                          │
│    local SanrioShop = {                                                  │
│        VERSION = "3.0.0",                                                │
│        DEBUG = true,  ← Change to true                                   │
│    }                                                                      │
│                                                                           │
│  When enabled:                                                            │
│    • Prints detailed error messages                                      │
│    • Emits "error" events                                                │
│    • Shows more console output                                           │
│                                                                           │
└───────────────────────────────────────────────────────────────────────────┘

┌───────────────────────────────────────────────────────────────────────────┐
│ ✅ SETUP CHECKLIST                                                         │
├───────────────────────────────────────────────────────────────────────────┤
│                                                                           │
│  □ Create ShopSystem folder                                              │
│  □ Add SanrioShop LocalScript                                            │
│  □ Add SanrioShop_Core ModuleScript                                      │
│  □ Add SanrioShop_UI ModuleScript                                        │
│  □ Create TycoonRemotes folder                                           │
│  □ Add 4 remote objects                                                  │
│  □ Update product IDs                                                    │
│  □ Create server ProcessReceipt                                          │
│  □ Test with M key                                                       │
│                                                                           │
└───────────────────────────────────────────────────────────────────────────┘

┌───────────────────────────────────────────────────────────────────────────┐
│ 📖 DOCUMENTATION FILES                                                     │
├───────────────────────────────────────────────────────────────────────────┤
│                                                                           │
│  INDEX.md          - File navigation guide                               │
│  SUMMARY.md        - High-level overview                                 │
│  QUICK_START.md    - 5-minute setup guide                                │
│  README.md         - Complete documentation                              │
│  STRUCTURE.txt     - Visual hierarchy reference                          │
│  REFERENCE_CARD.txt- This file                                           │
│                                                                           │
└───────────────────────────────────────────────────────────────────────────┘

╔═══════════════════════════════════════════════════════════════════════════╗
║  💡 Pro Tip: Print this card and keep it next to your keyboard!          ║
╚═══════════════════════════════════════════════════════════════════════════╝

                        Sanrio Shop System v3.0.0
                     Last Updated: 2025-10-03
